/*
 * This file was generated by the Gradle 'init' task.
 *
 * This is a general purpose Gradle build.
 * Learn how to create Gradle builds at https://guides.gradle.org/creating-new-gradle-builds/
 */
buildscript {
  ext {
    kotlinVersion = "1.4.21"
  }

  repositories {
    mavenCentral()
  }

  dependencies {
    classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
  }
}
plugins {
  id 'java'
  id 'application'
  id "com.github.johnrengelman.shadow" version "2.0.4"
  id "org.jetbrains.kotlin.jvm" version "1.4.21"
  id "org.jetbrains.kotlin.plugin.serialization" version "1.4.21"
}
ext {
  kotlinVersion = "1.4.21"
  vertxVersion = "4.0.0"
  junitJupiterEngineVersion = "5.2.0"
}

repositories {
  mavenLocal()
  jcenter()
}

group = 'com.github.jmlb23.bookstore'
version = '1.0.0-SNAPSHOT'

sourceCompatibility = '1.8'
mainClassName = 'io.vertx.core.Launcher'

def mainVerticleName = 'com.github.jmlb23.blog.verticles.MainVerticle'
def watchForChange = 'src/**/*'
def doOnChange = './gradlew classes'

dependencies {
  def arrow_version = "0.13.2"

  implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlinVersion"
  implementation "io.vertx:vertx-core:$vertxVersion"
  implementation "io.vertx:vertx-lang-kotlin-coroutines:$vertxVersion"
  implementation "io.vertx:vertx-auth-jwt:$vertxVersion"
  implementation "io.vertx:vertx-web:$vertxVersion"
  implementation "io.vertx:vertx-jdbc-client:$vertxVersion"
  implementation "mysql:mysql-connector-java:8.0.15"
  implementation "org.jetbrains.kotlinx:kotlinx-serialization-json:1.0.1"
  implementation platform("io.arrow-kt:arrow-stack:$arrow_version")
  implementation "io.arrow-kt:arrow-core"
  implementation "io.arrow-kt:arrow-fx-coroutines"
  testImplementation "io.vertx:vertx-junit5:$vertxVersion"
  testRuntime("org.junit.jupiter:junit-jupiter-engine:$junitJupiterEngineVersion")
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
  kotlinOptions {
    jvmTarget = "1.8"
  }
}

shadowJar {
  classifier = 'fat'
  manifest {
    attributes 'Main-Verticle': mainVerticleName
  }
  mergeServiceFiles {
    include 'META-INF/services/io.vertx.core.spi.VerticleFactory'
  }
}

test {
  useJUnitPlatform()
  testLogging {
    events 'PASSED', 'FAILED', 'SKIPPED'
  }
}

run {
  args = ['run', mainVerticleName, "--redeploy=$watchForChange", "--launcher-class=$mainClassName", "--on-redeploy=$doOnChange"]
}
